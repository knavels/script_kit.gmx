<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//checkpoint init is in the scrkit preloader
//checkpoint_init();

var iy, ir, count;
for (iy = 0; iy &lt; 5; iy += 1)
{
    count = round(random_range(1, 4));
    for (ir = 0; ir &lt;= count; ir += 1)
    {
        ds_grid_row_add(global.checkpoint_ds, iy, round(random_range(0,10)), round(random_range(0, 10)));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if key_pressed(ord("A"))
{
    var rm, _x, _y;
    rm = get_integer_custom("room", 0, 0);
    _x = get_integer_custom("x", 0, 0);
    _y = get_integer_custom("y", 0, 0);
    checkpoint_add(rm,_x,_y);
}
if key_pressed(ord("C"))
{
    var r, _x, _y;
    r = get_integer_custom("row", 0, 0);
    checkpoint_clear_room(r);
}
if key_pressed(ord("G"))
{
    var r, this;
    r = get_integer_custom("room", 0, 0);
    this = checkpoint_get(r);
    show_message(string_format2("RETRIEVED: %a01 , %a02", this[0], this[1]));
}

if key_pressed(ord("R"))
    game_restart();

var ds_w, ds_h, s;
ds_w = ds_grid_width(global.checkpoint_ds);
ds_h = ds_grid_height(global.checkpoint_ds);
draw_set_font(0);
s = 32;
for (iy = 0; iy &lt; ds_h; iy += 1)
{
    for (ix = 0; ix &lt; ds_w; ix += 1)
    {
        draw_text(ix * s, iy * s, string(ds_grid_get(global.checkpoint_ds, ix, iy)))
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
